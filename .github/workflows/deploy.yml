name: Production Deployment
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      UPLOADTHING_SECRET: ${{ secrets.UPLOADTHING_SECRET }}
      UPLOADTHING_APP_ID: ${{ secrets.UPLOADTHING_APP_ID }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: |
        npm run test
        npm run test:e2e
        
    - name: Database migrations
      run: npx prisma migrate deploy
      
    - name: Build application
      run: npm run build
      
    - name: Deploy to production
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CF_API_TOKEN }}
        accountId: ${{ secrets.CF_ACCOUNT_ID }}
        command: pages deploy .next --project-name=ecommerce

    - name: Verify deployment
      run: |
        curl -s --retry 10 --retry-delay 5 ${{ secrets.NEXTAUTH_URL }}/api/health
        
    - name: Notify on success
      if: success()
      uses: slackapi/slack-github-action@v1
      with:
        channel-id: 'deployments'
        slack-message: '✅ Production deployment successful!'
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        
    - name: Notify on failure
      if: failure()
      uses: slackapi/slack-github-action@v1
      with:
        channel-id: 'deployments'
        slack-message: '❌ Production deployment failed!'
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }} 