name: E2E Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ecommerce_test
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: test_secret
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      UPLOADTHING_SECRET: ${{ secrets.UPLOADTHING_SECRET }}
      UPLOADTHING_APP_ID: ${{ secrets.UPLOADTHING_APP_ID }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ecommerce_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Setup Database
      run: |
        npx prisma generate
        npx prisma migrate deploy
        npm run seed
        
    - name: Build Next.js app
      run: npm run build
      
    - name: Run Playwright tests
      run: npm run test:e2e
      
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30 